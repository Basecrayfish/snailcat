diff --git a/openjdk/hotspot/make/linux/makefiles/gcc.make b/openjdk/hotspot/make/linux/makefiles/gcc.make
index 7bf780d8..8195d334 100644
--- openjdk/hotspot/make/linux/makefiles/gcc.make
+++ openjdk/hotspot/make/linux/makefiles/gcc.make
@@ -282,14 +282,14 @@ endif
 # Linker flags
 
 # statically link libstdc++.so, work with gcc but ignored by g++
-STATIC_STDCXX = -Wl,-Bstatic -lstdc++ -Wl,-Bdynamic
+STATIC_STDCXX = -Wl,-Bstatic -lc++ -Wl,-Bdynamic
 # While the VM needs the above line, adlc needs a separate setting:
-ADLC_STATIC_STDCXX = -static-libstdc++
+ADLC_STATIC_STDCXX = -static-libc++
 
 ifeq ($(USE_CLANG),)
   # statically link libgcc and/or libgcc_s, libgcc does not exist before gcc-3.x.
   ifneq ("${CC_VER_MAJOR}", "2")
-    STATIC_LIBGCC += -static-libgcc
+    STATIC_LIBGCC += -static-compiler-rt
   endif
 
   ifeq ($(BUILDARCH), ia64)
diff --git a/openjdk/hotspot/make/linux/makefiles/vm.make b/openjdk/hotspot/make/linux/makefiles/vm.make
index a57735be..38e8a941 100644
--- openjdk/hotspot/make/linux/makefiles/vm.make
+++ openjdk/hotspot/make/linux/makefiles/vm.make
@@ -296,7 +296,7 @@ else
     LFLAGS_VM              += $(STATIC_LIBGCC)
     LIBS_VM                += $(STATIC_STDCXX)
   else
-    LIBS_VM                += -lstdc++
+    LIBS_VM                += -lc++
   endif
 
   LIBS_VM                  += $(LIBS)
diff --git a/openjdk/common/autoconf/generated-configure.sh b/openjdk/common/autoconf/generated-configure.sh
index 4484644a2..83888fe6a 100644
--- a/openjdk/common/autoconf/generated-configure.sh
+++ b/openjdk/common/autoconf/generated-configure.sh
@@ -50518,7 +50518,7 @@ ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ex
 ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
 
     OLD_CXXFLAGS="$CXXFLAGS"
-    CXXFLAGS="$CXXFLAGS -lstdc++"
+    CXXFLAGS="$CXXFLAGS -lc++"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -50550,7 +50550,7 @@ $as_echo "$has_dynamic_libstdcxx" >&6; }
     # Test if stdc++ can be linked statically.
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking if static link of stdc++ is possible" >&5
 $as_echo_n "checking if static link of stdc++ is possible... " >&6; }
-    STATIC_STDCXX_FLAGS="-Wl,-Bstatic -lstdc++ -lgcc -Wl,-Bdynamic"
+    STATIC_STDCXX_FLAGS="-Wl,-Bstatic -lc++ -lgcc -Wl,-Bdynamic"
     ac_ext=cpp
 ac_cpp='$CXXCPP $CPPFLAGS'
 ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
@@ -50607,7 +50607,7 @@ $as_echo_n "checking how to link with libstdc++... " >&6; }
     # If dynamic was requested, it's available since it would fail above otherwise.
     # If dynamic wasn't requested, go with static unless it isn't available.
     if test "x$with_stdc__lib" = xdynamic || test "x$has_static_libstdcxx" = xno || test "x$JVM_VARIANT_ZEROSHARK" = xtrue; then
-      LIBCXX="$LIBCXX -lstdc++"
+      LIBCXX="$LIBCXX -lc++"
       LDCXX="$CXX"
       STATIC_CXX_SETTING="STATIC_CXX=false"
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: dynamic" >&5
@@ -50803,7 +50803,7 @@ fi
 
   # TODO better (platform agnostic) test
   if test "x$OPENJDK_TARGET_OS" = xmacosx && test "x$LIBCXX" = x && test "x$TOOLCHAIN_TYPE" = xgcc; then
-    LIBCXX="-lstdc++"
+    LIBCXX="-lc++"
   fi
 
 
diff --git a/openjdk/common/autoconf/libraries.m4 b/openjdk/common/autoconf/libraries.m4
index 718ee0f41..4a017d1b7 100644
--- a/openjdk/common/autoconf/libraries.m4
+++ b/openjdk/common/autoconf/libraries.m4
@@ -1202,7 +1202,7 @@ AC_DEFUN_ONCE([LIB_SETUP_STATIC_LINK_LIBSTDCPP],
     AC_MSG_CHECKING([if dynamic link of stdc++ is possible])
     AC_LANG_PUSH(C++)
     OLD_CXXFLAGS="$CXXFLAGS"
-    CXXFLAGS="$CXXFLAGS -lstdc++"
+    CXXFLAGS="$CXXFLAGS -lc++"
     AC_LINK_IFELSE([AC_LANG_PROGRAM([], [return 0;])],
         [has_dynamic_libstdcxx=yes],
         [has_dynamic_libstdcxx=no])
@@ -1212,7 +1212,7 @@ AC_DEFUN_ONCE([LIB_SETUP_STATIC_LINK_LIBSTDCPP],
 
     # Test if stdc++ can be linked statically.
     AC_MSG_CHECKING([if static link of stdc++ is possible])
-    STATIC_STDCXX_FLAGS="-Wl,-Bstatic -lstdc++ -lgcc -Wl,-Bdynamic"
+    STATIC_STDCXX_FLAGS="-Wl,-Bstatic -lc++ -lgcc -Wl,-Bdynamic"
     AC_LANG_PUSH(C++)
     OLD_LIBS="$LIBS"
     OLD_CXX="$CXX"
@@ -1242,7 +1242,7 @@ AC_DEFUN_ONCE([LIB_SETUP_STATIC_LINK_LIBSTDCPP],
     # If dynamic was requested, it's available since it would fail above otherwise.
     # If dynamic wasn't requested, go with static unless it isn't available.
     if test "x$with_stdc__lib" = xdynamic || test "x$has_static_libstdcxx" = xno || test "x$JVM_VARIANT_ZEROSHARK" = xtrue; then
-      LIBCXX="$LIBCXX -lstdc++"
+      LIBCXX="$LIBCXX -lc++"
       LDCXX="$CXX"
       STATIC_CXX_SETTING="STATIC_CXX=false"
       AC_MSG_RESULT([dynamic])
@@ -1315,7 +1315,7 @@ AC_DEFUN_ONCE([LIB_SETUP_STATIC_LINK_LIBSTDCPP],
 
   # TODO better (platform agnostic) test
   if test "x$OPENJDK_TARGET_OS" = xmacosx && test "x$LIBCXX" = x && test "x$TOOLCHAIN_TYPE" = xgcc; then
-    LIBCXX="-lstdc++"
+    LIBCXX="-lc++"
   fi
 
   AC_SUBST(LIBCXX)
